{"version":3,"sources":["redux/actions/index.ts","core/useSearchParams.ts","components/Sidebar.tsx"],"names":["getCategories","type","actionTypes","getImages","params","getMoreImages","useSearchParams","names","useQuery","URLSearchParams","useLocation","search","query","forEach","name","get","Sidebar","id","category_ids","category","useSelector","state","dispatch","useDispatch","React","useEffect","className","isFetching","list","map","item","to","activeClassName"],"mappings":"iIAAA,iHAOaA,EAAgB,iBAAO,CAClCC,KAAMC,MAGKC,EAAY,SAACC,GAAD,MAAqB,CAC5CH,KAAMC,IACNE,WAGWC,EAAgB,SAACD,GAAD,MAAqB,CAChDH,KAAMC,IACNE,Y,gCClBF,WAUeE,IARS,WAAgC,IAA/BC,EAA8B,uDAAZ,GACnCC,EAAW,kBAAM,IAAIC,gBAAgBC,cAAcC,SACnDC,EAAQJ,IACRJ,EAAmC,GAEzC,OADAG,EAAMM,SAAQ,SAACC,GAAD,OAAWV,EAAOU,GAAQF,EAAMG,IAAID,MAC3CV,I,gCCPT,0EA2CeY,UAnCW,WAAO,IACTC,EAAOX,YAAgB,CAAC,iBAAtCY,aACFC,EAAWC,aACf,SAACC,GAAD,OAAWA,EAAMF,YAEbG,EAAWC,cAMjB,OAJAC,IAAMC,WAAU,WACdH,EAAStB,iBACR,CAACsB,IAGF,qBAAKI,UAAU,UAAf,SACGP,EAASQ,WACR,cAAC,IAAD,CAAQD,UAAU,iBAElB,sBAAKA,UAAU,kBAAf,UACE,0CACA,6BACGP,EAASS,KAAKC,KAAI,SAACC,GAAD,OACjB,cAAC,IAAD,CACEC,GAAE,gDAA2CD,EAAKb,IAElDe,gBAAiBF,EAAKb,IAAMA,EAAK,SAAW,GAH9C,SAKGa,EAAKhB,MAHDgB,EAAKb","file":"static/js/4.bf99a2bd.chunk.js","sourcesContent":["import * as actionTypes from \"../../constants/actionTypes\";\r\n\r\nexport interface Params {\r\n  limit: string;\r\n  category_ids: string;\r\n}\r\n\r\nexport const getCategories = () => ({\r\n  type: actionTypes.GET_CATEGORIES,\r\n});\r\n\r\nexport const getImages = (params: Params) => ({\r\n  type: actionTypes.GET_IMAGES,\r\n  params,\r\n});\r\n\r\nexport const getMoreImages = (params: Params) => ({\r\n  type: actionTypes.GET_MORE_IMAGES,\r\n  params,\r\n});\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nconst useSearchParams = (names: string[] = []): any => {\r\n  const useQuery = () => new URLSearchParams(useLocation().search);\r\n  const query = useQuery();\r\n  const params: { [index: string]: any } = {};\r\n  names.forEach((name) => (params[name] = query.get(name)));\r\n  return params;\r\n};\r\n\r\nexport default useSearchParams;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCategories } from \"../redux/actions\";\r\nimport { DefaultRootState } from \"../constants/types\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport useSearchParams from \"../core/useSearchParams\";\r\nimport Loader from \"../core/loader\";\r\n\r\nconst Sidebar: React.FC = () => {\r\n  const { category_ids: id } = useSearchParams([\"category_ids\"]);\r\n  const category = useSelector<DefaultRootState, DefaultRootState[\"category\"]>(\r\n    (state) => state.category\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getCategories());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {category.isFetching ? (\r\n        <Loader className=\"sidebar-load\" />\r\n      ) : (\r\n        <div className=\"sidebar-content\">\r\n          <h2>Category</h2>\r\n          <ul>\r\n            {category.list.map((item) => (\r\n              <NavLink\r\n                to={`/gallery/search?limit=10&category_ids=${item.id}`}\r\n                key={item.id}\r\n                activeClassName={item.id == id ? \"active\" : \"\"}\r\n              >\r\n                {item.name}\r\n              </NavLink>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"sourceRoot":""}